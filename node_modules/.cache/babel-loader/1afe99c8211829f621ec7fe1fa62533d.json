{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntu/react_functional_components_exercise/src/MovieCard.js\";\nimport React from 'react';\n/*\nSince this component doesn't need to hold state, we can make it a Stateless\nFunctional Component.\n*/\n\nconst MovieCard = props => {\n  /*\n    Destructuring via ES6. We're getting the profiles, users, and movies properties\n    off of the pros passed into this presentational component. If you need a refresher\n    on this syntax, check out this course:\n    https://www.udacity.com/course/es6-javascript-improved--ud356\n    */\n  const {\n    users,\n    usersWhoLikedMovie,\n    movieInfo\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movieInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liked By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"None of the current users liked this movie.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: usersWhoLikedMovie && usersWhoLikedMovie.map(userId => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: users[userId].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this)\n        }, userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, movieInfo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/home/ubuntu/react_functional_components_exercise/src/MovieCard.js"],"names":["React","MovieCard","props","users","usersWhoLikedMovie","movieInfo","name","length","map","userId","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB;AACF;AACA;AACA;AACA;AACA;AACE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,kBAAT;AAA6BC,IAAAA;AAA7B,MAA2CH,KAAjD;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKG,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIG,CAACF,kBAAD,IAAuBA,kBAAkB,CAACG,MAAnB,KAA8B,CAArD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGH,kBAAkB,IACjBA,kBAAkB,CAACI,GAAnB,CAAuBC,MAAM,IAAI;AAC/B,4BACE;AAAA,iCACE;AAAA,sBAAIN,KAAK,CAACM,MAAD,CAAL,CAAcH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAASG,MAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAASJ,SAAS,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9BD;;KAAMT,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\n/*\nSince this component doesn't need to hold state, we can make it a Stateless\nFunctional Component.\n*/\nconst MovieCard = props => {\n  /*\n    Destructuring via ES6. We're getting the profiles, users, and movies properties\n    off of the pros passed into this presentational component. If you need a refresher\n    on this syntax, check out this course:\n    https://www.udacity.com/course/es6-javascript-improved--ud356\n    */\n  const { users, usersWhoLikedMovie, movieInfo } = props;\n\n  return (\n    <li key={movieInfo.id}>\n      <h2>{movieInfo.name}</h2>\n      <h3>Liked By:</h3>\n\n      {!usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? (\n        <p>None of the current users liked this movie.</p>\n      ) : (\n        <ul>\n          {usersWhoLikedMovie &&\n            usersWhoLikedMovie.map(userId => {\n              return (\n                <li key={userId}>\n                  <p>{users[userId].name}</p>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nexport default MovieCard;\n\n"]},"metadata":{},"sourceType":"module"}